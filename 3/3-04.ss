(define (dn x)
  (display x)
  (newline))

(define true #t)

(define false #f)

; **********************

(define (make-account balance password)
  (define count 0)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "sb"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (get m)
    (cond ((eq? m 'withdraw) withdraw)
          ((eq? m 'deposit) deposit)
          (else (error "sb" "sb"))))
  (define (dispatch pwd m)
    (if (eq? pwd password)
        (begin (set! count 0)
               (get m))
        (begin (set! count (+ count 1))
               (if (< 7 count)
                   (error "police" "police")
                   (lambda (n) "wrong")))))
  dispatch)

(define acc (make-account 100 'abc))
(dn ((acc 'abc 'withdraw) 40))
(dn ((acc 'def 'deposit) 50))
(dn ((acc 'def 'deposit) 50))
(dn ((acc 'def 'deposit) 50))
(dn ((acc 'def 'deposit) 50))
(dn ((acc 'def 'deposit) 50))
(dn ((acc 'def 'deposit) 50))
(dn ((acc 'def 'deposit) 50))
(dn ((acc 'def 'deposit) 50))
(dn ((acc 'def 'deposit) 50))
(dn ((acc 'def 'deposit) 50))

(exit)
